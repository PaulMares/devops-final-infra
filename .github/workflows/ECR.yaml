name: Nightly Build and Push to ECR

on:
  schedule:
    - cron: '0 8 * * *'  # Midnight Pacific Time (UTC-8 â†’ 08:00 UTC)
  workflow_dispatch:     # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ frontend, backend, api-1, api-2 ]

    steps:
      - name: Checkout infra repo
        uses: actions/checkout@v3

      - name: Clone source repo
        run: |
          git clone https://github.com/YOUR_USERNAME/YOUR_SOURCE_REPO.git source

      - name: Check if service has changed
        id: changed
        working-directory: source
        run: |
          git fetch origin main
          git checkout main

          BASE_SHA=$(git rev-parse HEAD~1)
          HEAD_SHA=$(git rev-parse HEAD)

          echo "Comparing $BASE_SHA to $HEAD_SHA for service: ${{ matrix.service }}"

          if git diff --name-only $BASE_SHA $HEAD_SHA | grep "^${{ matrix.service }}/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip if service not changed
        if: steps.changed.outputs.changed == 'false'
        run: echo "No changes to ${{ matrix.service }}, skipping."

      - name: Configure AWS credentials
        if: steps.changed.outputs.changed == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        if: steps.changed.outputs.changed == 'true'
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        if: steps.changed.outputs.changed == 'true'
        run: |
          SERVICE_NAME=${{ matrix.service }}
          IMAGE_TAG=${GITHUB_SHA::7}
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          REPO_NAME=devops-final/$SERVICE_NAME

          docker build -t $ECR_URI/$REPO_NAME:$IMAGE_TAG ./source/$SERVICE_NAME
          docker push $ECR_URI/$REPO_NAME:$IMAGE_TAG

          # Optional: Push latest tag
          docker tag $ECR_URI/$REPO_NAME:$IMAGE_TAG $ECR_URI/$REPO_NAME:latest
          docker push $ECR_URI/$REPO_NAME:latest
